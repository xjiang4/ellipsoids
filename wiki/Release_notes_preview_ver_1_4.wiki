#summary Release Notes Preview for ver 1.4

 # New method of ellipsoid-to-ellipsoid/ellipsoid-to-point distance calculation 
    # Lin, A. and Han, S. On the Distance between Two Ellipsoids.
       SIAM Journal on Optimization, 2002, Vol. 13, No. 1 : pp. 298-308
    # Stanley Chan, "Numerical method for Finding Minimum Distance to an
       Ellipsoid". 
       http://videoprocessing.ucsd.edu/~stanleychan/publication/unpublished/Ellipse.pdf
 # Old reach class responsible for calculating reach sets for both discrete and continous systems is replaced with new elltool.reach.ReachContinuous and elltool.reach.ReachDiscrete classes. These new classes feature
     # all new solvers performing the internal consistency checks for ellipsoidal approximations to make sure that ellipsoidal tubes are calculated with the desired precision
     # all new visualization engine with improved visual effects and capable of displaying the touch curves and good curves l(t) for the tight approximations.
     # ability to recognize LTI systems (with constant A) to use a more precise algorithm of ellipsoidal approximation calculation.
 # New command-line tools for calculating the both tight and not-tight ellipsoidal approximations for the linear systems defined via user-friendly configuration files. These tools are
     # gras.ellapx.uncertcalc.run  - for calculating the tight approximations. 
     # gras.ellapx.uncertmixcalc.run - for calculating the non-tight approximations by algorithm developed by A.B. Kurzhansky and A.N. Daryin
 # New Ellipsoid Toolbox configuration subsystem that replaces the legacy global variable ellOptions. Now all the parameters can be changed in a user-friendly way via the special command line tool elltool.conf.editconf by editing the toolbox configurations as text files.
 # Yalmip solver for SDP problem is replaced with more reliable CVX (http://cvxr.com/cvx/) which allowed to fix a lot of bugs and solve problems in the following methods of ellipsoid class:
     * CONTAINS - checks if one ellipsoid contains the other. The condition for E1 = firstEllArr to contain E2 = secondEllArr is min(rho(l | E1) - rho(l | E2)) > 0, subject to <l, l> = 1.
     * INTERSECT - checks if the union or intersection of ellipsoids intersects
             given ellipsoid, hyperplane or polytope.
     * ISCONTAINEDININTERSECTION - checks if the intersection of ellipsoids contains the union or intersection of given ellipsoids or polytopes.
     * ELLINTERSECTION_IA - computes maximum volume ellipsoid that is contained
     * ELLUNION_EA - computes minimum volume ellipsoid that contains union of given ellipsoids.
     * DISTANCE - computes distance between the given ellipsoid (or array of ellipsoids) to the specified object (or arrays of objects):vector, ellipsoid, hyperplane or polytope.
 # All classes of the toolbox has been re-written using the modern implemenentaiton of object oriented programming in recent Matlab versions. Now the toolbox requires Matlab 2012a or later.
 # All classes and functions of the toolbox has been convered with the unit tests which resulted in a lot of bug fixes. All tests are run on a daily basis on a dedicated hardware, the tests results are automatically set to the subscribers of the following Google Group: http://groups.google.com/group ellipsoids-tests-notification The link to this group has been publishes on the project web site. The unit tests has been implemented using MLUNITEXT framework (see http://code.google.com/p/ellipsoids/wiki/MLUNITEXT_unit_testing_framework_description)
 # Implemented a new ellipsoid class capable of representing both unbounded and degenerate ellipsoids. Has a reduced functionality compared to ellipsoid class. However all the implemented methods are capable of dealing with all cases of ellipsoids being degenerate/unbounded. These methods are:
     * minkSumEa - external approximation of E1+E2
     * minkSumIa - internal approximation of E1+E2
     * minkDiffEa - external approximation of E1-E2
     * minkDiffIa - internal approximation of E1-E2
     * inv - create generalized ellipsoid whose matrix in pseudoinverse to the matrix of input generalized ellipsoid
     * rho - calculate support function for input generalized ellipsoid
     * plot - plots ellipsoids in 2D or 3D.   
     * eq - compares two arrays of ellipsoids
     * dimension - returns dimensionality of input ellipsoid
 # Improved matrix S calculation algorithm introduced by A.N. Daryain and A.B. Kurzhansky in "Method of invariant sets for linear systems of high dimensionality under uncertain disturbances", "Doklady Akademii Nauk", 2012 for internal ellipsoidal approximations of E_1+E_2. This results into less calculation-expensive and more robust ellipsoidal approximations for both ellipsoidal sums and reachability domains of linear systems.
 # Implemented the functions for 
      # checking for positive (non-negative) definiteness, 
      # checking forsymmetry;
      # matrix square root extraction for non-negative matrices these functions are used everywhere in the toolbox (in ReachContinuous,ReachDiscrete, ellipsoid and GenEllipsoid classes). This results into more robust calculation logic and user-friendly problem reporting.
 # Integration between Ellipsoidal Toolbox and Multi-Parametric Toolbox has been improoved
 # Incorporated log4j framework
 # Many methods of ellipsoid class now work for mult-dimensional inputs.
 # Regularization for degenerate ellipsoidal constraints in ReachContinuous and ReachDiscrete 